
/// ==================================================================
/// ChatBotProcessAssignment.g.cs
/// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace DirRX.ChatBotTask.Client
{
  public class ChatBotProcessAssignment :
    global::Sungero.CoreEntities.Client.DatabookEntry, global::DirRX.ChatBotTask.IChatBotProcessAssignment
  {
    #region Fields and properties

    public static new readonly global::System.Guid ClassTypeGuid = global::System.Guid.Parse("eef6834c-36a0-490f-8d7b-4962162f9890");

    public override global::System.Guid TypeGuid
    {
      get { return global::DirRX.ChatBotTask.Client.ChatBotProcessAssignment.ClassTypeGuid; }
    }

    public override string TypeName
    {
      get { return "DirRX.ChatBotTask.IChatBotProcessAssignment, Sungero.Domain.Interfaces"; }
    }

      public override string DisplayValue
      {
        get { return this.Name; }
        set { this.Name = value; }
      }

      public override string DisplayPropertyName
      {
        get { return "Name"; }
      }


    public new global::DirRX.ChatBotTask.IChatBotProcessAssignmentState State
    {
      get
      {
        return (global::DirRX.ChatBotTask.IChatBotProcessAssignmentState)base.State;
      }
    }

    protected override global::Sungero.Domain.Shared.IEntityState CreateState()
    {
      return new global::DirRX.ChatBotTask.Shared.ChatBotProcessAssignmentState(this);
    }

    public new global::DirRX.ChatBotTask.IChatBotProcessAssignmentInfo Info
    {
      get
      {
        return (global::DirRX.ChatBotTask.IChatBotProcessAssignmentInfo)base.Info;
      }
    }

    public new global::DirRX.ChatBotTask.IChatBotProcessAssignmentAccessRights AccessRights
    {
      get
      {
        return (global::DirRX.ChatBotTask.IChatBotProcessAssignmentAccessRights)base.AccessRights;
      }
    }

    protected override global::Sungero.Domain.Shared.IEntityAccessRights CreateAccessRights()
    {
      return new global::DirRX.ChatBotTask.Client.ChatBotProcessAssignmentAccessRights(this);
    }

        protected global::Sungero.Domain.Client.SimpleProperty<global::System.String> _Name;

        public virtual global::System.String Name
        {
          get { return this._Name.Value; }
          set { this._Name.Value = value; }
        }
        protected global::Sungero.Domain.Client.SimpleProperty<global::System.Int32?> _AssignmentId;

        public virtual global::System.Int32? AssignmentId
        {
          get { return this._AssignmentId.Value; }
          set { this._AssignmentId.Value = value; }
        }




              protected global::Sungero.Domain.Client.INavigationProperty<global::DirRX.ChatBotInfrastructure.IChatBotProcess> _ChatBotProcess;

              public virtual global::DirRX.ChatBotInfrastructure.IChatBotProcess ChatBotProcess
              {
              get
              {
                return this._ChatBotProcess.Value as global::DirRX.ChatBotInfrastructure.IChatBotProcess;
              }

              set
              {
                (this._ChatBotProcess as global::Sungero.Domain.Client.IProperty).Value = value;
              }
            }










    #endregion

    #region Methods

    protected override object CreateActionsHandlers()
    {
      return new global::DirRX.ChatBotTask.Client.ChatBotProcessAssignmentActions(this);
    }

    protected override object CreateCollectionActionsHandlers()
    {
      return new global::DirRX.ChatBotTask.Client.ChatBotProcessAssignmentCollectionActions();
    }

    protected override object CreateAnyChildEntityActionsHandlers()
    {
      return new global::DirRX.ChatBotTask.Client.ChatBotProcessAssignmentAnyChildEntityActions();
    }

    protected override object CreateAnyChildEntityCollectionActionsHandlers()
    {
      return new global::DirRX.ChatBotTask.Client.ChatBotProcessAssignmentAnyChildEntityCollectionActions();
    }


    protected override global::Sungero.Domain.Client.EntityFunctions CreateClientFunctions()
    {
      return new global::DirRX.ChatBotTask.Client.ChatBotProcessAssignmentFunctions(this);
    }

    protected override global::Sungero.Domain.Shared.EntityFunctions CreateSharedFunctions()
    {
      return new global::DirRX.ChatBotTask.Shared.ChatBotProcessAssignmentFunctions(this);
    }
    protected override object CreateHandlers() {
      return new global::DirRX.ChatBotTask.ChatBotProcessAssignmentClientHandlers(this);
    }
    protected override object CreateSharedHandlers() {
      return new global::DirRX.ChatBotTask.ChatBotProcessAssignmentSharedHandlers(this);
    }

    #endregion

    #region Framework events

    protected void NameChangedHandler()
    {
      var args = new global::Sungero.Domain.Shared.StringPropertyChangedEventArgs(this.State.Properties.Name, this.Name, this);
     ((global::DirRX.ChatBotTask.ChatBotProcessAssignmentSharedHandlers)this.SharedHandlers).NameChanged(args);
    }

    protected void AssignmentIdChangedHandler()
    {
      var args = new global::Sungero.Domain.Shared.IntegerPropertyChangedEventArgs(this.State.Properties.AssignmentId, this.AssignmentId, this);
     ((global::DirRX.ChatBotTask.ChatBotProcessAssignmentSharedHandlers)this.SharedHandlers).AssignmentIdChanged(args);
    }

    protected void ChatBotProcessChangedHandler()
    {
      var args = new global::DirRX.ChatBotTask.Shared.ChatBotProcessAssignmentChatBotProcessChangedEventArgs(this.State.Properties.ChatBotProcess, this.ChatBotProcess, this);
     ((global::DirRX.ChatBotTask.ChatBotProcessAssignmentSharedHandlers)this.SharedHandlers).ChatBotProcessChanged(args);
    }



  protected global::System.String NameValueInputHandler(global::System.String value)
  {
    var args = new global::Sungero.Presentation.StringValueInputEventArgs(this.Name, value, this, this.Info.Properties.Name);
    ((global::DirRX.ChatBotTask.ChatBotProcessAssignmentClientHandlers)this.Handlers).NameValueInput(args);
    return args.NewValue;
  }

  protected global::System.Int32? AssignmentIdValueInputHandler(global::System.Int32? value)
  {
    var args = new global::Sungero.Presentation.IntegerValueInputEventArgs(this.AssignmentId, value, this, this.Info.Properties.AssignmentId);
    ((global::DirRX.ChatBotTask.ChatBotProcessAssignmentClientHandlers)this.Handlers).AssignmentIdValueInput(args);
    return args.NewValue;
  }

  protected global::DirRX.ChatBotInfrastructure.IChatBotProcess ChatBotProcessValueInputHandler(global::DirRX.ChatBotInfrastructure.IChatBotProcess value)
  {
    var args = new global::DirRX.ChatBotTask.Client.ChatBotProcessAssignmentChatBotProcessValueInputEventArgs(this.ChatBotProcess, value, this, this.Info.Properties.ChatBotProcess);
    ((global::DirRX.ChatBotTask.ChatBotProcessAssignmentClientHandlers)this.Handlers).ChatBotProcessValueInput(args);
    return args.NewValue;
  }



    #endregion

    #region Constructors



              protected virtual void InitChatBotProcessNavigationProperty()
              {
                this._ChatBotProcess = new global::Sungero.Domain.Client.NavigationProperty<global::DirRX.ChatBotInfrastructure.IChatBotProcess>("ChatBotProcess", this);
                this._ChatBotProcess.ValueChanged += (sender, e) => { this.ChatBotProcessChangedHandler(); };
                this.AddProperty(this._ChatBotProcess as global::Sungero.Domain.Client.IProperty);
              }




    public ChatBotProcessAssignment()
    {
            this._Name = new global::Sungero.Domain.Client.SimpleProperty<global::System.String>("Name", this);
            this._Name.ValueChanged += (sender, e) => { this.NameChangedHandler(); };
            this.AddProperty(this._Name);

            this._AssignmentId = new global::Sungero.Domain.Client.SimpleProperty<global::System.Int32?>("AssignmentId", this);
            this._AssignmentId.ValueChanged += (sender, e) => { this.AssignmentIdChangedHandler(); };
            this.AddProperty(this._AssignmentId);

            this.InitChatBotProcessNavigationProperty();








    }

    #endregion

  }
}

/// ==================================================================
/// ChatBotProcessAssignmentPresenter.g.cs
/// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace DirRX.ChatBotTask.Client
{
  public class ChatBotProcessAssignmentPresenter<T> :
    global::Sungero.Domain.Client.EntityPresenter<T>
    where T : class, global::DirRX.ChatBotTask.IChatBotProcessAssignment
  {
    #region Fields and properties




    #endregion

    #region Methods

    #endregion

    #region Framework events

    protected override void EntityPropertyChangedEventHandler(object sender, global::System.ComponentModel.PropertyChangedEventArgs e)
    {
      base.EntityPropertyChangedEventHandler(sender, e);
    }

    #endregion

              protected global::Sungero.Domain.Client.IEntityCollectionPresenter _ChatBotProcessCollectionPresenter;
              public global::Sungero.Domain.Client.IEntityCollectionPresenter ChatBotProcessCollectionPresenter
              {
          get { return this._ChatBotProcessCollectionPresenter; }
        }



    #region Constructors

    private void Init()
    {
                  this._ChatBotProcessCollectionPresenter = this.CreateCollectionPresenterForNavigationProperty<global::DirRX.ChatBotInfrastructure.IChatBotProcess>(global::System.Guid.Parse("cd14e8ae-e680-429c-b460-777f5b72d319"));
              this._ChatBotProcessCollectionPresenter
              .Query = global::Sungero.Domain.Client.Session.GetValuesForNavigationPropertyWithoutSourceEntity<global::DirRX.ChatBotInfrastructure.IChatBotProcess>(() => this.Entity.Id, typeof(T), "ChatBotProcess");


    }

    public ChatBotProcessAssignmentPresenter()
    {
      this.Init();
    }

    #endregion
  }
}

/// ==================================================================
/// ChatBotProcessAssignmentCollectionPresenter.g.cs
/// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace DirRX.ChatBotTask.Client
{
  public class ChatBotProcessAssignmentCollectionPresenter<T> : 
    global::Sungero.Domain.Client.EntityCollectionPresenter<T>
    where T: class, global::DirRX.ChatBotTask.IChatBotProcessAssignment
  {
    #region Actions



    #endregion

    #region Methods


    #endregion

    public ChatBotProcessAssignmentCollectionPresenter(global::System.Linq.IQueryable<T> query, OnLookup onLookup)
      : base(query, onLookup)
    {
    }

    public ChatBotProcessAssignmentCollectionPresenter(global::System.Linq.IQueryable<T> query)
      : this(query, null) { }

    public ChatBotProcessAssignmentCollectionPresenter(OnLookup onLookup)
      : this(null, onLookup) { }

    public ChatBotProcessAssignmentCollectionPresenter()
      : this(null, null) { }
  }
}

/// ==================================================================
/// ChatBotProcessAssignmentRepositoryImplementer.g.cs
/// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace DirRX.ChatBotTask.Client
{ 
  public class ChatBotProcessAssignmentRepositoryImplementer<T> : 
      global::Sungero.Domain.Client.RepositoryImplementer<T>,
      global::DirRX.ChatBotTask.IChatBotProcessAssignmentRepositoryImplementer<T>
      where T : global::DirRX.ChatBotTask.IChatBotProcessAssignment
    {
       public new global::DirRX.ChatBotTask.IChatBotProcessAssignmentAccessRights AccessRights
       {
          get { return (global::DirRX.ChatBotTask.IChatBotProcessAssignmentAccessRights)base.AccessRights; }
       }

       public new global::DirRX.ChatBotTask.IChatBotProcessAssignmentInfo Info
       {
          get { return (global::DirRX.ChatBotTask.IChatBotProcessAssignmentInfo)base.Info; }
       }

       protected override global::Sungero.Domain.Shared.IEntityAccessRights CreateAccessRights()
       {
         return new global::DirRX.ChatBotTask.Client.ChatBotProcessAssignmentTypeAccessRights(typeof(T));
       }
    }
}

/// ==================================================================
/// ChatBotProcessAssignmentAccessRights.g.cs
/// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace DirRX.ChatBotTask.Client
{
  public class ChatBotProcessAssignmentAccessRights : 
    Sungero.CoreEntities.Client.DatabookEntryAccessRights, DirRX.ChatBotTask.IChatBotProcessAssignmentAccessRights
  {

    public ChatBotProcessAssignmentAccessRights(global::Sungero.Domain.Shared.IEntity entity) : base(entity)
    {
    }
  }

  public class ChatBotProcessAssignmentTypeAccessRights : 
    Sungero.CoreEntities.Client.DatabookEntryTypeAccessRights, DirRX.ChatBotTask.IChatBotProcessAssignmentAccessRights
  {

    public ChatBotProcessAssignmentTypeAccessRights(global::System.Type entityType) : base(entityType)
    {
    }
  }
}
