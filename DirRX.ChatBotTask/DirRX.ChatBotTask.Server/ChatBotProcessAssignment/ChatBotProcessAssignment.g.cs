
/// ==================================================================
/// ChatBotProcessAssignment.g.cs
/// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace DirRX.ChatBotTask.Server
{
  public class ChatBotProcessAssignmentFilter<T> :
    global::Sungero.Domain.EntityFilterBase<T>
    where T : class, global::DirRX.ChatBotTask.IChatBotProcessAssignment
  {
    protected global::DirRX.ChatBotTask.IChatBotProcessAssignmentFilterState Filter { get; private set; }

    private global::DirRX.ChatBotTask.IChatBotProcessAssignmentFilterState filter
    {
      get
      {
        return this.Filter;
      }
    }

    protected override global::System.Linq.IQueryable<T> ApplyAppliedFilter(global::System.Linq.IQueryable<T> query)
    {
      return base.ApplyAppliedFilter(query);
    }

    public ChatBotProcessAssignmentFilter(global::DirRX.ChatBotTask.IChatBotProcessAssignmentFilterState filter)
    : base()
    {
      this.Filter = filter;
    }

    protected ChatBotProcessAssignmentFilter()
    {
    }
  }

  public class ChatBotProcessAssignmentFilterForChatBotProcess<TQueryEntity, TSourceEntity>
    : global::Sungero.Domain.EntityPropertyFilterBase<TQueryEntity, TSourceEntity>
    where TQueryEntity : class, global::DirRX.ChatBotInfrastructure.IChatBotProcess
    where TSourceEntity : class, global::DirRX.ChatBotTask.IChatBotProcessAssignment
  {
    protected override global::System.Linq.IQueryable<TQueryEntity> ApplyAppliedFilter(global::System.Linq.IQueryable<TQueryEntity> query, TSourceEntity sourceEntity)
    {
      return new global::DirRX.ChatBotTask.ChatBotProcessAssignmentChatBotProcessPropertyFilteringServerHandler<TQueryEntity>(sourceEntity).ChatBotProcessFiltering(query, new global::Sungero.Domain.PropertyFilteringEventArgs(sourceEntity));
    }

    public ChatBotProcessAssignmentFilterForChatBotProcess(string propertyName)
      : base(propertyName)
    {
    }
  }



  [global::Sungero.Domain.Filter(typeof(global::DirRX.ChatBotTask.Server.ChatBotProcessAssignmentFilter<global::DirRX.ChatBotTask.IChatBotProcessAssignment>))]
  [global::Sungero.Domain.PropertyFilter(typeof(global::DirRX.ChatBotTask.Server.ChatBotProcessAssignmentFilterForChatBotProcess<global::DirRX.ChatBotInfrastructure.IChatBotProcess, global::DirRX.ChatBotTask.IChatBotProcessAssignment>), "ChatBotProcess")]


  public class ChatBotProcessAssignment :
    global::Sungero.CoreEntities.Server.DatabookEntry, global::DirRX.ChatBotTask.IChatBotProcessAssignment
  {
    public static new readonly global::System.Guid ClassTypeGuid = global::System.Guid.Parse("eef6834c-36a0-490f-8d7b-4962162f9890");

    public override global::System.Guid TypeGuid
    {
      get { return global::DirRX.ChatBotTask.Server.ChatBotProcessAssignment.ClassTypeGuid; }
    }

    public override string TypeName
    {
      get { return "DirRX.ChatBotTask.IChatBotProcessAssignment, Sungero.Domain.Interfaces"; }
    }

    public override string DisplayValue
    {
      get { return this.Name; }
      set { this.Name = value; }
    }

    public new virtual global::DirRX.ChatBotTask.IChatBotProcessAssignmentState State
    {
      get { return (global::DirRX.ChatBotTask.IChatBotProcessAssignmentState)base.State; }
    }

    protected override global::Sungero.Domain.Shared.IEntityState CreateState()
    {
      return new global::DirRX.ChatBotTask.Shared.ChatBotProcessAssignmentState(this);
    }

    public new virtual global::DirRX.ChatBotTask.IChatBotProcessAssignmentInfo Info
    {
      get { return (global::DirRX.ChatBotTask.IChatBotProcessAssignmentInfo)base.Info; }
    }

    public new virtual global::DirRX.ChatBotTask.IChatBotProcessAssignmentAccessRights AccessRights
    {
      get { return (global::DirRX.ChatBotTask.IChatBotProcessAssignmentAccessRights)base.AccessRights; }
    }

    protected override global::Sungero.Domain.Shared.IEntityAccessRights CreateAccessRights()
    {
      return new global::DirRX.ChatBotTask.Server.ChatBotProcessAssignmentAccessRights(this);
    }

    protected override global::Sungero.Domain.EntityFunctions CreateServerFunctions()
    {
      return new global::DirRX.ChatBotTask.Server.ChatBotProcessAssignmentFunctions(this);
    }

    protected override global::Sungero.Domain.Shared.EntityFunctions CreateSharedFunctions()
    {
      return new global::DirRX.ChatBotTask.Shared.ChatBotProcessAssignmentFunctions(this);
    }

    protected override object CreateHandlers() {
      return new global::DirRX.ChatBotTask.ChatBotProcessAssignmentServerHandlers(this);
    }

    protected override object CreateSharedHandlers() {
      return new global::DirRX.ChatBotTask.ChatBotProcessAssignmentSharedHandlers(this);
    }

    private global::System.String _Name;
    public virtual global::System.String Name
    {
      get
      {
        return this._Name;
      }

      set
      {
        this.SetPropertyValue("Name", this._Name, value, (propertyValue) => { this._Name = propertyValue; }, this.NameChangedHandler);
      }
    }
    private global::System.Int32? _AssignmentId;
    public virtual global::System.Int32? AssignmentId
    {
      get
      {
        return this._AssignmentId;
      }

      set
      {
        this.SetPropertyValue("AssignmentId", this._AssignmentId, value, (propertyValue) => { this._AssignmentId = propertyValue; }, this.AssignmentIdChangedHandler);
      }
    }







    private global::DirRX.ChatBotInfrastructure.IChatBotProcess _ChatBotProcess;
    public virtual global::DirRX.ChatBotInfrastructure.IChatBotProcess ChatBotProcess
    {
      get
      {
        return this._ChatBotProcess;
      }

      set
      {
        this.SetPropertyValue("ChatBotProcess", this._ChatBotProcess, value, (propertyValue) => { this._ChatBotProcess = propertyValue; }, this.ChatBotProcessChangedHandler);
      }
    }




    protected override global::Sungero.Domain.Shared.EntityCreatingFromServerHandler CreateCreatingFromServerHandler(
      global::Sungero.Domain.Shared.IEntity entitySource)
    {
      return new global::DirRX.ChatBotTask.ChatBotProcessAssignmentCreatingFromServerHandler((global::DirRX.ChatBotTask.IChatBotProcessAssignment)entitySource, this.Info);
    }

    #region Framework events

    protected void NameChangedHandler()
    {
      var args = new global::Sungero.Domain.Shared.StringPropertyChangedEventArgs(this.State.Properties.Name, this.Name, this);
     ((global::DirRX.ChatBotTask.ChatBotProcessAssignmentSharedHandlers)this.SharedHandlers).NameChanged(args);
    }

    protected void AssignmentIdChangedHandler()
    {
      var args = new global::Sungero.Domain.Shared.IntegerPropertyChangedEventArgs(this.State.Properties.AssignmentId, this.AssignmentId, this);
     ((global::DirRX.ChatBotTask.ChatBotProcessAssignmentSharedHandlers)this.SharedHandlers).AssignmentIdChanged(args);
    }

    protected void ChatBotProcessChangedHandler()
    {
      var args = new global::DirRX.ChatBotTask.Shared.ChatBotProcessAssignmentChatBotProcessChangedEventArgs(this.State.Properties.ChatBotProcess, this.ChatBotProcess, this);
     ((global::DirRX.ChatBotTask.ChatBotProcessAssignmentSharedHandlers)this.SharedHandlers).ChatBotProcessChanged(args);
    }



    #endregion


    public ChatBotProcessAssignment()
    {
    }

  }
}

/// ==================================================================
/// ChatBotProcessAssignmentHandlers.g.cs
/// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace DirRX.ChatBotTask
{
  public partial class ChatBotProcessAssignmentChatBotProcessPropertyFilteringServerHandler<T>
    : global::Sungero.Domain.EntityPropertyFilteringServerHandler
    where T : class, global::DirRX.ChatBotInfrastructure.IChatBotProcess
  {
    private global::DirRX.ChatBotTask.IChatBotProcessAssignment _obj
    {
      get { return (global::DirRX.ChatBotTask.IChatBotProcessAssignment)this.Entity; }
    }

    public virtual global::System.Linq.IQueryable<T> ChatBotProcessFiltering(global::System.Linq.IQueryable<T> query, global::Sungero.Domain.PropertyFilteringEventArgs e)
    {
      return query;
    }

    public ChatBotProcessAssignmentChatBotProcessPropertyFilteringServerHandler(global::DirRX.ChatBotTask.IChatBotProcessAssignment entity)
      : base(entity)
    {
    }
  }



  public partial class ChatBotProcessAssignmentFilteringServerHandler<T>
    : global::Sungero.Domain.EntityFilteringServerHandler<T>
    where T : class, global::DirRX.ChatBotTask.IChatBotProcessAssignment
  {
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
    protected global::DirRX.ChatBotTask.IChatBotProcessAssignmentFilterState Filter { get; private set; }

    private global::DirRX.ChatBotTask.IChatBotProcessAssignmentFilterState _filter
    {
      get
      {
        return this.Filter;
      }
    }

    public ChatBotProcessAssignmentFilteringServerHandler(global::DirRX.ChatBotTask.IChatBotProcessAssignmentFilterState filter)
    : base()
    {
      this.Filter = filter;
    }

    protected ChatBotProcessAssignmentFilteringServerHandler()
    {
    }

    public override global::System.Linq.IQueryable<T> Filtering(global::System.Linq.IQueryable<T> query, global::Sungero.Domain.FilteringEventArgs e)
    {
      return query;
    }


  }

  public partial class ChatBotProcessAssignmentServerHandlers : global::Sungero.CoreEntities.DatabookEntryServerHandlers
  {
    private global::DirRX.ChatBotTask.IChatBotProcessAssignment _obj
    {
      get { return (global::DirRX.ChatBotTask.IChatBotProcessAssignment)this.Entity; }
    }

    public ChatBotProcessAssignmentServerHandlers(global::DirRX.ChatBotTask.IChatBotProcessAssignment entity)    
      : base(entity)    
    {      
    }
  }

  public partial class ChatBotProcessAssignmentCreatingFromServerHandler : global::Sungero.CoreEntities.DatabookEntryCreatingFromServerHandler
  {
    private global::DirRX.ChatBotTask.IChatBotProcessAssignment _source
    {
      get { return (global::DirRX.ChatBotTask.IChatBotProcessAssignment)this.Source; }
    }

    private global::DirRX.ChatBotTask.IChatBotProcessAssignmentInfo _info
    {
      get { return (global::DirRX.ChatBotTask.IChatBotProcessAssignmentInfo)this._Info; }
    }

    public ChatBotProcessAssignmentCreatingFromServerHandler(global::DirRX.ChatBotTask.IChatBotProcessAssignment source, global::DirRX.ChatBotTask.IChatBotProcessAssignmentInfo info)
      : base(source, info)
    {
    }
  }

}

/// ==================================================================
/// ChatBotProcessAssignmentEventArgs.g.cs
/// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace DirRX.ChatBotTask.Server
{
}

/// ==================================================================
/// ChatBotProcessAssignmentAccessRights.g.cs
/// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace DirRX.ChatBotTask.Server
{
  public class ChatBotProcessAssignmentAccessRights : 
    Sungero.CoreEntities.Server.DatabookEntryAccessRights, DirRX.ChatBotTask.IChatBotProcessAssignmentAccessRights
  {

    public ChatBotProcessAssignmentAccessRights(global::Sungero.Domain.Shared.IEntity entity) : base(entity)
    {
    }
  }

  public class ChatBotProcessAssignmentTypeAccessRights : 
    Sungero.CoreEntities.Server.DatabookEntryTypeAccessRights, DirRX.ChatBotTask.IChatBotProcessAssignmentAccessRights
  {

    public ChatBotProcessAssignmentTypeAccessRights(global::System.Type entityType) : base(entityType)
    {
    }
  }
}

/// ==================================================================
/// ChatBotProcessAssignmentRepositoryImplementer.g.cs
/// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace DirRX.ChatBotTask.Server
{
    public class ChatBotProcessAssignmentRepositoryImplementer<T> : 
      global::Sungero.Domain.RepositoryImplementer<T>,
      global::DirRX.ChatBotTask.IChatBotProcessAssignmentRepositoryImplementer<T>
      where T : global::DirRX.ChatBotTask.IChatBotProcessAssignment 
    {
       public new global::DirRX.ChatBotTask.IChatBotProcessAssignmentAccessRights AccessRights
       {
          get { return (global::DirRX.ChatBotTask.IChatBotProcessAssignmentAccessRights)base.AccessRights; }
       }

       public new global::DirRX.ChatBotTask.IChatBotProcessAssignmentInfo Info
       {
          get { return (global::DirRX.ChatBotTask.IChatBotProcessAssignmentInfo)base.Info; }
       }

       protected override global::Sungero.Domain.Shared.IEntityAccessRights CreateAccessRights()
       {
         return new global::DirRX.ChatBotTask.Server.ChatBotProcessAssignmentTypeAccessRights(typeof(T));
       }
    }
}

/// ==================================================================
/// ChatBotProcessAssignmentPanelNavigationFilters.g.cs
/// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace DirRX.ChatBotTask.Server
{
}

/// ==================================================================
/// ChatBotProcessAssignmentServerFunctions.g.cs
/// ==================================================================

namespace DirRX.ChatBotTask.Server
{
  public partial class ChatBotProcessAssignmentFunctions : global::Sungero.CoreEntities.Server.DatabookEntryFunctions
  {
    private global::DirRX.ChatBotTask.IChatBotProcessAssignment _obj
    {
      get { return (global::DirRX.ChatBotTask.IChatBotProcessAssignment)this.Entity; }
    }

    public ChatBotProcessAssignmentFunctions(global::DirRX.ChatBotTask.IChatBotProcessAssignment entity) : base(entity) { }
  }
}

/// ==================================================================
/// ChatBotProcessAssignmentFunctions.g.cs
/// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace DirRX.ChatBotTask.Functions
{
  internal static class ChatBotProcessAssignment
  {
  }
}

/// ==================================================================
/// ChatBotProcessAssignmentServerPublicFunctions.g.cs
/// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace DirRX.ChatBotTask.Server
{
  public class ChatBotProcessAssignmentServerPublicFunctions : global::DirRX.ChatBotTask.Server.IChatBotProcessAssignmentServerPublicFunctions
  {
  }
}

/// ==================================================================
/// ChatBotProcessAssignmentQueries.g.cs
/// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace DirRX.ChatBotTask.Queries
{
  public class ChatBotProcessAssignment
  {
    private static global::Sungero.Domain.SqlQueryResolver resolver = new global::Sungero.Domain.SqlQueryResolver("DirRX.ChatBotTask.Server.ChatBotProcessAssignment.ChatBotProcessAssignmentQueries.xml", System.Reflection.Assembly.GetExecutingAssembly());
  }
}
