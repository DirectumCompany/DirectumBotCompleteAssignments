
/// ==================================================================
/// Employee.g.cs
/// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace DirRX.Solution.Server
{
  public class EmployeeFilter<T> :
    global::Sungero.Company.Server.EmployeeFilter<T>
    where T : class, global::DirRX.Solution.IEmployee
  {
    private global::DirRX.Solution.IEmployeeFilterState filter
    {
      get
      {
        return (DirRX.Solution.IEmployeeFilterState)this.Filter;
      }
    }

    protected override global::System.Linq.IQueryable<T> ApplyAppliedFilter(global::System.Linq.IQueryable<T> query)
    {
      return base.ApplyAppliedFilter(query);
    }

    public EmployeeFilter(global::DirRX.Solution.IEmployeeFilterState filter)
    : base(filter)
    {
    }

    protected EmployeeFilter()
    {
    }
  }


  [global::Sungero.Domain.Filter(typeof(global::DirRX.Solution.Server.EmployeeFilter<global::DirRX.Solution.IEmployee>))]

  public class Employee :
    global::Sungero.Company.Server.Employee, global::DirRX.Solution.IEmployee
  {
    public static new readonly global::System.Guid ClassTypeGuid = global::System.Guid.Parse("7dc35907-1ed5-4ae7-bb1e-1ff8315f1e69");

    public override global::System.Guid TypeGuid
    {
      get { return global::DirRX.Solution.Server.Employee.ClassTypeGuid; }
    }

    public override string TypeName
    {
      get { return "DirRX.Solution.IEmployee, Sungero.Domain.Interfaces"; }
    }

    public override string DisplayValue
    {
      get { return this.Name; }
      set { this.Name = value; }
    }

    public new virtual global::DirRX.Solution.IEmployeeState State
    {
      get { return (global::DirRX.Solution.IEmployeeState)base.State; }
    }

    protected override global::Sungero.Domain.Shared.IEntityState CreateState()
    {
      return new global::DirRX.Solution.Shared.EmployeeState(this);
    }

    public new virtual global::DirRX.Solution.IEmployeeInfo Info
    {
      get { return (global::DirRX.Solution.IEmployeeInfo)base.Info; }
    }

    public new virtual global::DirRX.Solution.IEmployeeAccessRights AccessRights
    {
      get { return (global::DirRX.Solution.IEmployeeAccessRights)base.AccessRights; }
    }

    protected override global::Sungero.Domain.Shared.IEntityAccessRights CreateAccessRights()
    {
      return new global::DirRX.Solution.Server.EmployeeAccessRights(this);
    }

    protected override global::Sungero.Domain.EntityFunctions CreateServerFunctions()
    {
      return new global::DirRX.Solution.Server.EmployeeFunctions(this);
    }

    protected override global::Sungero.Domain.Shared.EntityFunctions CreateSharedFunctions()
    {
      return new global::DirRX.Solution.Shared.EmployeeFunctions(this);
    }

    protected override object CreateHandlers() {
      return new global::DirRX.Solution.EmployeeServerHandlers(this);
    }

    protected override object CreateSharedHandlers() {
      return new global::DirRX.Solution.EmployeeSharedHandlers(this);
    }

    private global::System.Boolean? _IsAllowExecuteThroughChatBot;
    public virtual global::System.Boolean? IsAllowExecuteThroughChatBot
    {
      get
      {
        return this._IsAllowExecuteThroughChatBot;
      }

      set
      {
        this.SetPropertyValue("IsAllowExecuteThroughChatBot", this._IsAllowExecuteThroughChatBot, value, (propertyValue) => { this._IsAllowExecuteThroughChatBot = propertyValue; }, this.IsAllowExecuteThroughChatBotChangedHandler);
      }
    }










    protected override global::Sungero.Domain.Shared.EntityCreatingFromServerHandler CreateCreatingFromServerHandler(
      global::Sungero.Domain.Shared.IEntity entitySource)
    {
      return new global::DirRX.Solution.EmployeeCreatingFromServerHandler((global::DirRX.Solution.IEmployee)entitySource, this.Info);
    }

    #region Framework events

    protected void IsAllowExecuteThroughChatBotChangedHandler()
    {
      var args = new global::Sungero.Domain.Shared.BooleanPropertyChangedEventArgs(this.State.Properties.IsAllowExecuteThroughChatBot, this.IsAllowExecuteThroughChatBot, this);
     ((global::DirRX.Solution.EmployeeSharedHandlers)this.SharedHandlers).IsAllowExecuteThroughChatBotChanged(args);
    }



    #endregion


    public Employee()
    {
    }

  }
}

/// ==================================================================
/// EmployeeHandlers.g.cs
/// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace DirRX.Solution
{

  public partial class EmployeeFilteringServerHandler<T>
    : global::Sungero.Company.EmployeeFilteringServerHandler<T>
    where T : class, global::DirRX.Solution.IEmployee
  {
    private global::DirRX.Solution.IEmployeeFilterState _filter
    {
      get
      {
        return (DirRX.Solution.IEmployeeFilterState)this.Filter;
      }
    }

    public EmployeeFilteringServerHandler(global::DirRX.Solution.IEmployeeFilterState filter)
    : base(filter)
    {
    }

    protected EmployeeFilteringServerHandler()
    {
    }

    public override global::System.Linq.IQueryable<T> Filtering(global::System.Linq.IQueryable<T> query, global::Sungero.Domain.FilteringEventArgs e)
    {
      query = base.Filtering(query, e);
            return query;
    }

      public override global::System.Linq.IQueryable<Sungero.Company.IBusinessUnit> BusinessUnitFiltering(global::System.Linq.IQueryable<Sungero.Company.IBusinessUnit> query, global::Sungero.Domain.FilteringEventArgs e)
      {
        query = base.BusinessUnitFiltering(query, e);
              return query;
      }

      public override global::System.Linq.IQueryable<Sungero.Company.IDepartment> DepartmentFiltering(global::System.Linq.IQueryable<Sungero.Company.IDepartment> query, global::Sungero.Domain.FilteringEventArgs e)
      {
        query = base.DepartmentFiltering(query, e);
              return query;
      }

      public override global::System.Linq.IQueryable<Sungero.Company.IJobTitle> JobTitleFiltering(global::System.Linq.IQueryable<Sungero.Company.IJobTitle> query, global::Sungero.Domain.FilteringEventArgs e)
      {
        query = base.JobTitleFiltering(query, e);
              return query;
      }


  }

  public partial class EmployeeServerHandlers : global::Sungero.Company.EmployeeServerHandlers
  {
    private global::DirRX.Solution.IEmployee _obj
    {
      get { return (global::DirRX.Solution.IEmployee)this.Entity; }
    }

    public EmployeeServerHandlers(global::DirRX.Solution.IEmployee entity)    
      : base(entity)    
    {      
    }
  }

  public partial class EmployeeCreatingFromServerHandler : global::Sungero.Company.EmployeeCreatingFromServerHandler
  {
    private global::DirRX.Solution.IEmployee _source
    {
      get { return (global::DirRX.Solution.IEmployee)this.Source; }
    }

    private global::DirRX.Solution.IEmployeeInfo _info
    {
      get { return (global::DirRX.Solution.IEmployeeInfo)this._Info; }
    }

    public EmployeeCreatingFromServerHandler(global::DirRX.Solution.IEmployee source, global::DirRX.Solution.IEmployeeInfo info)
      : base(source, info)
    {
    }
  }

}

/// ==================================================================
/// EmployeeEventArgs.g.cs
/// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace DirRX.Solution.Server
{
}

/// ==================================================================
/// EmployeeAccessRights.g.cs
/// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace DirRX.Solution.Server
{
  public class EmployeeAccessRights : 
    Sungero.Company.Server.EmployeeAccessRights, DirRX.Solution.IEmployeeAccessRights
  {

    public EmployeeAccessRights(global::Sungero.Domain.Shared.IEntity entity) : base(entity)
    {
    }
  }

  public class EmployeeTypeAccessRights : 
    Sungero.Company.Server.EmployeeTypeAccessRights, DirRX.Solution.IEmployeeAccessRights
  {

    public EmployeeTypeAccessRights(global::System.Type entityType) : base(entityType)
    {
    }
  }
}

/// ==================================================================
/// EmployeeRepositoryImplementer.g.cs
/// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace DirRX.Solution.Server
{
    public class EmployeeRepositoryImplementer<T> : 
      global::Sungero.Company.Server.EmployeeRepositoryImplementer<T>,
      global::DirRX.Solution.IEmployeeRepositoryImplementer<T>
      where T : global::DirRX.Solution.IEmployee 
    {
       public new global::DirRX.Solution.IEmployeeAccessRights AccessRights
       {
          get { return (global::DirRX.Solution.IEmployeeAccessRights)base.AccessRights; }
       }

       public new global::DirRX.Solution.IEmployeeInfo Info
       {
          get { return (global::DirRX.Solution.IEmployeeInfo)base.Info; }
       }

       protected override global::Sungero.Domain.Shared.IEntityAccessRights CreateAccessRights()
       {
         return new global::DirRX.Solution.Server.EmployeeTypeAccessRights(typeof(T));
       }
    }
}

/// ==================================================================
/// EmployeePanelNavigationFilters.g.cs
/// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace DirRX.Solution.Server
{
    public class EmployeeBusinessUnitPanelNavigationFilter : global::Sungero.Company.Server.EmployeeBusinessUnitPanelNavigationFilter
    {
      private global::System.Linq.IQueryable Apply<T>(global::System.Linq.IQueryable query) where T: class, global::DirRX.Solution.IEmployee
      {
        var typedQuery = (global::System.Linq.IQueryable<global::Sungero.Company.IBusinessUnit>)query;
        var typedState = (global::DirRX.Solution.IEmployeeFilterState)this.State;
        var handlers = new global::DirRX.Solution.EmployeeFilteringServerHandler<T>(typedState);
        var args = new global::Sungero.Domain.FilteringEventArgs();
        return handlers.BusinessUnitFiltering(typedQuery, args);
      }

      public override global::System.Linq.IQueryable Apply(global::System.Linq.IQueryable query)
      {
        return this.Apply<global::DirRX.Solution.IEmployee>(query);
      }
    }

    public class EmployeeDepartmentPanelNavigationFilter : global::Sungero.Company.Server.EmployeeDepartmentPanelNavigationFilter
    {
      private global::System.Linq.IQueryable Apply<T>(global::System.Linq.IQueryable query) where T: class, global::DirRX.Solution.IEmployee
      {
        var typedQuery = (global::System.Linq.IQueryable<global::Sungero.Company.IDepartment>)query;
        var typedState = (global::DirRX.Solution.IEmployeeFilterState)this.State;
        var handlers = new global::DirRX.Solution.EmployeeFilteringServerHandler<T>(typedState);
        var args = new global::Sungero.Domain.FilteringEventArgs();
        return handlers.DepartmentFiltering(typedQuery, args);
      }

      public override global::System.Linq.IQueryable Apply(global::System.Linq.IQueryable query)
      {
        return this.Apply<global::DirRX.Solution.IEmployee>(query);
      }
    }

    public class EmployeeJobTitlePanelNavigationFilter : global::Sungero.Company.Server.EmployeeJobTitlePanelNavigationFilter
    {
      private global::System.Linq.IQueryable Apply<T>(global::System.Linq.IQueryable query) where T: class, global::DirRX.Solution.IEmployee
      {
        var typedQuery = (global::System.Linq.IQueryable<global::Sungero.Company.IJobTitle>)query;
        var typedState = (global::DirRX.Solution.IEmployeeFilterState)this.State;
        var handlers = new global::DirRX.Solution.EmployeeFilteringServerHandler<T>(typedState);
        var args = new global::Sungero.Domain.FilteringEventArgs();
        return handlers.JobTitleFiltering(typedQuery, args);
      }

      public override global::System.Linq.IQueryable Apply(global::System.Linq.IQueryable query)
      {
        return this.Apply<global::DirRX.Solution.IEmployee>(query);
      }
    }

}

/// ==================================================================
/// EmployeeServerFunctions.g.cs
/// ==================================================================

namespace DirRX.Solution.Server
{
  public partial class EmployeeFunctions : global::Sungero.Company.Server.EmployeeFunctions
  {
    private global::DirRX.Solution.IEmployee _obj
    {
      get { return (global::DirRX.Solution.IEmployee)this.Entity; }
    }

    public EmployeeFunctions(global::DirRX.Solution.IEmployee entity) : base(entity) { }
  }
}

/// ==================================================================
/// EmployeeFunctions.g.cs
/// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace DirRX.Solution.Functions
{
  internal static class Employee
  {
  }
}

/// ==================================================================
/// EmployeeServerPublicFunctions.g.cs
/// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace DirRX.Solution.Server
{
  public class EmployeeServerPublicFunctions : global::DirRX.Solution.Server.IEmployeeServerPublicFunctions
  {
  }
}

/// ==================================================================
/// EmployeeQueries.g.cs
/// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace DirRX.Solution.Queries
{
  public class Employee
  {
    private static global::Sungero.Domain.SqlQueryResolver resolver = new global::Sungero.Domain.SqlQueryResolver("DirRX.Solution.Server.Employee.EmployeeQueries.xml", System.Reflection.Assembly.GetExecutingAssembly());
  }
}
